{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48],"program":"C:\\Users\\Sam\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","window","C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=63f8b867f5fafb9d","-C","extra-filename=-63f8b867f5fafb9d","--out-dir","c:\\Users\\Sam\\Documents\\VS Code\\Arcade-Games\\Conway\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Sam\\Documents\\VS Code\\Arcade-Games\\Conway\\target\\rls\\debug\\deps","--extern","input=c:\\Users\\Sam\\Documents\\VS Code\\Arcade-Games\\Conway\\target\\rls\\debug\\deps\\libinput-3d9f1cc04438ef66.rmeta","--extern","shader_version=c:\\Users\\Sam\\Documents\\VS Code\\Arcade-Games\\Conway\\target\\rls\\debug\\deps\\libshader_version-2c313e40fcc4c173.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Sam\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":[99,58,92,85,115,101,114,115,92,83,97,109,92,68,111,99,117,109,101,110,116,115,92,86,83,32,67,111,100,101,92,65,114,99,97,100,101,45,71,97,109,101,115,92,67,111,110,119,97,121,92,116,97,114,103,101,116,92,114,108,115,92,100,101,98,117,103,92,100,101,112,115,92,108,105,98,119,105,110,100,111,119,45,54,51,102,56,98,56,54,55,102,53,102,97,102,98,57,100,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"window","disambiguator":[2610931676536956303,9503419000284323725]},"crate_root":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src","external_crates":[{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4600460140448241508,5508961786565165491]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8610258522078413241,2552335774923959090]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[689774644902935965,15536965172289007933]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[14449616671278297819,15737520967429649463]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":5,"id":{"name":"libc","disambiguator":[4305469048187536392,6292377906701422790]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":6,"id":{"name":"unwind","disambiguator":[16942367656321780542,690074915001374900]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":7,"id":{"name":"panic_unwind","disambiguator":[10785388942496925736,17432224770527763107]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":8,"id":{"name":"shader_version","disambiguator":[2466737921828490743,5323519356274773128]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":9,"id":{"name":"input","disambiguator":[4022857507129857997,15245161956444642486]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":10,"id":{"name":"bitflags","disambiguator":[17663748993387833488,14745650222893890122]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":11,"id":{"name":"serde_derive","disambiguator":[17301022804615867275,17716623755839562073]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":12,"id":{"name":"serde","disambiguator":[8191796167445068865,9696733361692634351]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":13,"id":{"name":"viewport","disambiguator":[11885771021197389061,15353101531760497036]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","num":14,"id":{"name":"float","disambiguator":[15870843459543003934,13952132388459945492]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":23710,"line_start":1,"line_end":747,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":1261,"byte_end":1269,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"NoWindow","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":23710,"line_start":1,"line_end":747,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-window-0.34.0\\src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":90},{"krate":0,"index":276},{"krate":0,"index":290},{"krate":0,"index":288},{"krate":0,"index":284},{"krate":0,"index":278},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":104},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":120},{"krate":0,"index":294},{"krate":0,"index":312},{"krate":0,"index":310},{"krate":0,"index":306},{"krate":0,"index":300},{"krate":0,"index":296},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":144},{"krate":0,"index":162},{"krate":0,"index":192},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":200}],"decl_id":null,"docs":" Window storage and interfacing traits.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"deny(missing_copy_implementations)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":23,"byte_end":61,"line_start":2,"line_end":2,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,92,110,111,95,119,105,110,100,111,119,46,114,115],"byte_start":24393,"byte_end":24401,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"NoWindow","qualname":"::no_window::NoWindow","value":"NoWindow {  }","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":25}],"decl_id":null,"docs":" A window without user interface, often used in server event loops.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,92,110,111,95,119,105,110,100,111,119,46,114,115],"byte_start":24546,"byte_end":24549,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<NoWindow>::new","value":"fn (settings: &WindowSettings) -> NoWindow","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `NoWindow`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":90},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":1472,"byte_end":1483,"line_start":42,"line_end":42,"column_start":10,"column_end":21},"name":"ProcAddress","qualname":"::ProcAddress","value":"*const ()","parent":null,"children":[],"decl_id":null,"docs":" The type of an OpenGL function address.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":276},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":1920,"byte_end":1924,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"name":"Size","qualname":"::Size","value":"Size { width, height }","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":69}],"decl_id":null,"docs":" Structure to store the window size.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":1909,"byte_end":2008,"line_start":53,"line_end":58,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":67},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":1954,"byte_end":1959,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"width","qualname":"::Size::width","value":"f64","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The width.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":69},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":1994,"byte_end":2000,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"name":"height","qualname":"::Size::height","value":"f64","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The height.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":294},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":3796,"byte_end":3804,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"Position","qualname":"::Position","value":"Position { x, y }","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":73}],"decl_id":null,"docs":" Structure to store the window position.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":3785,"byte_end":3892,"line_start":137,"line_end":142,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":3785,"byte_end":3892,"line_start":137,"line_end":142,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":71},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":3841,"byte_end":3842,"line_start":139,"line_end":139,"column_start":9,"column_end":10},"name":"x","qualname":"::Position::x","value":"i32","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" The x coordinate.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":73},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":3883,"byte_end":3884,"line_start":141,"line_end":141,"column_start":9,"column_end":10},"name":"y","qualname":"::Position::y","value":"i32","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" The y coordinate.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":140},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":4846,"byte_end":4869,"line_start":184,"line_end":184,"column_start":11,"column_end":34},"name":"BuildFromWindowSettings","qualname":"::BuildFromWindowSettings","value":"BuildFromWindowSettings: Sized","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" Constructs a window from a [`WindowSettings`](./struct.WindowSettings.html)\n object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":5118,"byte_end":5144,"line_start":191,"line_end":191,"column_start":8,"column_end":34},"name":"build_from_window_settings","qualname":"::BuildFromWindowSettings::build_from_window_settings","value":"fn (settings: &WindowSettings) -> Result<Self, String>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Builds the window from a `WindowSettings` object.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":144},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":5507,"byte_end":5513,"line_start":200,"line_end":200,"column_start":11,"column_end":17},"name":"Window","qualname":"::Window","value":"Window","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160}],"decl_id":null,"docs":" Trait representing the minimum requirements for defining a window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":5571,"byte_end":5587,"line_start":202,"line_end":202,"column_start":8,"column_end":24},"name":"set_should_close","qualname":"::Window::set_should_close","value":"fn (&mut self, value: bool) -> ()","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Tells the window to close or stay open.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":5670,"byte_end":5682,"line_start":205,"line_end":205,"column_start":8,"column_end":20},"name":"should_close","qualname":"::Window::should_close","value":"fn (&self) -> bool","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Returns true if the window should close.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":5744,"byte_end":5748,"line_start":208,"line_end":208,"column_start":8,"column_end":12},"name":"size","qualname":"::Window::size","value":"fn (&self) -> Size","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Gets the size of the window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":6008,"byte_end":6020,"line_start":215,"line_end":215,"column_start":8,"column_end":20},"name":"swap_buffers","qualname":"::Window::swap_buffers","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Swaps render buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":6119,"byte_end":6129,"line_start":218,"line_end":218,"column_start":8,"column_end":18},"name":"wait_event","qualname":"::Window::wait_event","value":"fn (&mut self) -> Input","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Wait indefinitely for an input event to be available from the window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":6358,"byte_end":6376,"line_start":224,"line_end":224,"column_start":8,"column_end":26},"name":"wait_event_timeout","qualname":"::Window::wait_event_timeout","value":"fn (&mut self, timeout: Duration) -> Option<Input>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Wait for an input event to be available from the window or for the\n specified timeout to be reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":6533,"byte_end":6543,"line_start":229,"line_end":229,"column_start":8,"column_end":18},"name":"poll_event","qualname":"::Window::poll_event","value":"fn (&mut self) -> Option<Input>","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Polls an input event from the window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":6876,"byte_end":6885,"line_start":238,"line_end":238,"column_start":8,"column_end":17},"name":"draw_size","qualname":"::Window::draw_size","value":"fn (&self) -> Size","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" Gets the draw size of the window.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":162},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":7214,"byte_end":7228,"line_start":247,"line_end":247,"column_start":11,"column_end":25},"name":"AdvancedWindow","qualname":"::AdvancedWindow","value":"AdvancedWindow: Window + Sized","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190}],"decl_id":null,"docs":" Trait representing a window with the most features that are still generic.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":7302,"byte_end":7311,"line_start":249,"line_end":249,"column_start":8,"column_end":17},"name":"get_title","qualname":"::AdvancedWindow::get_title","value":"fn (&self) -> String","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Gets a copy of the title of the window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":7376,"byte_end":7385,"line_start":252,"line_end":252,"column_start":8,"column_end":17},"name":"set_title","qualname":"::AdvancedWindow::set_title","value":"fn (&mut self, value: String) -> ()","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Sets the title of the window.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":7614,"byte_end":7619,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"title","qualname":"::AdvancedWindow::title","value":"fn (mut self, value: String) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Sets title on window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":7802,"byte_end":7817,"line_start":267,"line_end":267,"column_start":8,"column_end":23},"name":"get_exit_on_esc","qualname":"::AdvancedWindow::get_exit_on_esc","value":"fn (&self) -> bool","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Gets whether to exit when pressing esc.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":7931,"byte_end":7946,"line_start":272,"line_end":272,"column_start":8,"column_end":23},"name":"set_exit_on_esc","qualname":"::AdvancedWindow::set_exit_on_esc","value":"fn (&mut self, value: bool) -> ()","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Sets whether to exit when pressing esc.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":8255,"byte_end":8266,"line_start":281,"line_end":281,"column_start":8,"column_end":19},"name":"exit_on_esc","qualname":"::AdvancedWindow::exit_on_esc","value":"fn (mut self, value: bool) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Sets whether to exit when pressing the Esc button.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":8533,"byte_end":8551,"line_start":290,"line_end":290,"column_start":8,"column_end":26},"name":"set_capture_cursor","qualname":"::AdvancedWindow::set_capture_cursor","value":"fn (&mut self, value: bool) -> ()","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Sets whether to capture/grab the cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":8815,"byte_end":8829,"line_start":297,"line_end":297,"column_start":8,"column_end":22},"name":"capture_cursor","qualname":"::AdvancedWindow::capture_cursor","value":"fn (mut self, value: bool) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Sets whether to capture/grab the cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":9035,"byte_end":9039,"line_start":305,"line_end":305,"column_start":8,"column_end":12},"name":"show","qualname":"::AdvancedWindow::show","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Shows the window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":9165,"byte_end":9169,"line_start":310,"line_end":310,"column_start":8,"column_end":12},"name":"hide","qualname":"::AdvancedWindow::hide","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Hides the window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":9297,"byte_end":9309,"line_start":315,"line_end":315,"column_start":8,"column_end":20},"name":"get_position","qualname":"::AdvancedWindow::get_position","value":"fn (&self) -> Option<Position>","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Gets the position of window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":9453,"byte_end":9465,"line_start":320,"line_end":320,"column_start":8,"column_end":20},"name":"set_position","qualname":"::AdvancedWindow::set_position","value":"fn <P> (&mut self, val: P) -> ()","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Sets the position of window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":9609,"byte_end":9617,"line_start":325,"line_end":325,"column_start":8,"column_end":16},"name":"set_size","qualname":"::AdvancedWindow::set_size","value":"fn <S> (&mut self, val: S) -> ()","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Sets the window size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":9937,"byte_end":9945,"line_start":334,"line_end":334,"column_start":8,"column_end":16},"name":"position","qualname":"::AdvancedWindow::position","value":"fn <P> (mut self, val: P) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Sets the position of window.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":192},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":10678,"byte_end":10690,"line_start":353,"line_end":353,"column_start":11,"column_end":23},"name":"OpenGLWindow","qualname":"::OpenGLWindow","value":"OpenGLWindow: Window","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198}],"decl_id":null,"docs":" Trait for OpenGL specific operations on a window.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":10858,"byte_end":10874,"line_start":357,"line_end":357,"column_start":8,"column_end":24},"name":"get_proc_address","qualname":"::OpenGLWindow::get_proc_address","value":"fn (&mut self, proc_name: &str) -> ProcAddress","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the address of the specified OpenGL function if it exists.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":11003,"byte_end":11013,"line_start":360,"line_end":360,"column_start":8,"column_end":18},"name":"is_current","qualname":"::OpenGLWindow::is_current","value":"fn (&self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns true if this window's gl context is the current gl context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":11099,"byte_end":11111,"line_start":363,"line_end":363,"column_start":8,"column_end":20},"name":"make_current","qualname":"::OpenGLWindow::make_current","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Make the window's gl context the current gl context.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":316},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":11474,"byte_end":11488,"line_start":373,"line_end":373,"column_start":12,"column_end":26},"name":"WindowSettings","qualname":"::WindowSettings","value":"WindowSettings {  }","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95}],"decl_id":null,"docs":" Settings structure for window behavior.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":12007,"byte_end":12010,"line_start":398,"line_end":398,"column_start":12,"column_end":15},"name":"new","qualname":"<WindowSettings>::new","value":"fn <T, S> (title: T, size: S) -> WindowSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates window settings with defaults.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":12931,"byte_end":12936,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"build","qualname":"<WindowSettings>::build","value":"fn <W> (&self) -> Result<W, String>","parent":null,"children":[],"decl_id":null,"docs":" Builds window from the given settings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":13120,"byte_end":13129,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"get_title","qualname":"<WindowSettings>::get_title","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Gets the title of built windows.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":13235,"byte_end":13244,"line_start":435,"line_end":435,"column_start":12,"column_end":21},"name":"set_title","qualname":"<WindowSettings>::set_title","value":"fn (&mut self, value: String) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of built windows.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":13521,"byte_end":13526,"line_start":444,"line_end":444,"column_start":12,"column_end":17},"name":"title","qualname":"<WindowSettings>::title","value":"fn (mut self, value: String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":13664,"byte_end":13672,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"get_size","qualname":"<WindowSettings>::get_size","value":"fn (&self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Gets the size of built windows.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":13766,"byte_end":13774,"line_start":455,"line_end":455,"column_start":12,"column_end":20},"name":"set_size","qualname":"<WindowSettings>::set_size","value":"fn (&mut self, value: Size) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of built windows.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":14045,"byte_end":14049,"line_start":464,"line_end":464,"column_start":12,"column_end":16},"name":"size","qualname":"<WindowSettings>::size","value":"fn (mut self, value: Size) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":14199,"byte_end":14213,"line_start":470,"line_end":470,"column_start":12,"column_end":26},"name":"get_fullscreen","qualname":"<WindowSettings>::get_fullscreen","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows will be fullscreen.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":14328,"byte_end":14342,"line_start":475,"line_end":475,"column_start":12,"column_end":26},"name":"set_fullscreen","qualname":"<WindowSettings>::set_fullscreen","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows will be fullscreen.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":14646,"byte_end":14656,"line_start":484,"line_end":484,"column_start":12,"column_end":22},"name":"fullscreen","qualname":"<WindowSettings>::fullscreen","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows will be fullscreen.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":14833,"byte_end":14848,"line_start":490,"line_end":490,"column_start":12,"column_end":27},"name":"get_exit_on_esc","qualname":"<WindowSettings>::get_exit_on_esc","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should exit when the Esc key is pressed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":14985,"byte_end":15000,"line_start":495,"line_end":495,"column_start":12,"column_end":27},"name":"set_exit_on_esc","qualname":"<WindowSettings>::set_exit_on_esc","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should exit when the Esc key is pressed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":15328,"byte_end":15339,"line_start":504,"line_end":504,"column_start":12,"column_end":23},"name":"exit_on_esc","qualname":"<WindowSettings>::exit_on_esc","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should exit when the Esc key is pressed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":15608,"byte_end":15619,"line_start":513,"line_end":513,"column_start":12,"column_end":23},"name":"get_samples","qualname":"<WindowSettings>::get_samples","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of samples to use for anti-aliasing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":15841,"byte_end":15852,"line_start":521,"line_end":521,"column_start":12,"column_end":23},"name":"set_samples","qualname":"<WindowSettings>::set_samples","value":"fn (&mut self, value: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of samples to use for anti-aliasing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":16256,"byte_end":16263,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"samples","qualname":"<WindowSettings>::samples","value":"fn (mut self, value: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of samples to use for anti-aliasing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":16519,"byte_end":16528,"line_start":542,"line_end":542,"column_start":12,"column_end":21},"name":"get_vsync","qualname":"<WindowSettings>::get_vsync","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should use vsync.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":16743,"byte_end":16752,"line_start":550,"line_end":550,"column_start":12,"column_end":21},"name":"set_vsync","qualname":"<WindowSettings>::set_vsync","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should use vsync.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":17146,"byte_end":17151,"line_start":562,"line_end":562,"column_start":12,"column_end":17},"name":"vsync","qualname":"<WindowSettings>::vsync","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should use vsync.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":17643,"byte_end":17659,"line_start":575,"line_end":575,"column_start":12,"column_end":28},"name":"get_maybe_opengl","qualname":"<WindowSettings>::get_maybe_opengl","value":"fn (&self) -> Option<OpenGL>","parent":null,"children":[],"decl_id":null,"docs":" Gets the OpenGL version of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":18109,"byte_end":18125,"line_start":587,"line_end":587,"column_start":12,"column_end":28},"name":"set_maybe_opengl","qualname":"<WindowSettings>::set_maybe_opengl","value":"fn (&mut self, value: Option<OpenGL>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets OpenGL version of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":18770,"byte_end":18782,"line_start":603,"line_end":603,"column_start":12,"column_end":24},"name":"maybe_opengl","qualname":"<WindowSettings>::maybe_opengl","value":"fn (mut self, value: Option<OpenGL>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets OpenGL version of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":19197,"byte_end":19207,"line_start":615,"line_end":615,"column_start":12,"column_end":22},"name":"set_opengl","qualname":"<WindowSettings>::set_opengl","value":"fn (&mut self, value: OpenGL) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets OpenGL version of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":19750,"byte_end":19756,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"opengl","qualname":"<WindowSettings>::opengl","value":"fn (mut self, value: OpenGL) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the OpenGL version of built windows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":20379,"byte_end":20387,"line_start":645,"line_end":645,"column_start":12,"column_end":20},"name":"get_srgb","qualname":"<WindowSettings>::get_srgb","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should use hardware accelerated color conversion.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":20632,"byte_end":20640,"line_start":653,"line_end":653,"column_start":12,"column_end":20},"name":"set_srgb","qualname":"<WindowSettings>::set_srgb","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should use hardware accelerated color conversion.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":21062,"byte_end":21066,"line_start":665,"line_end":665,"column_start":12,"column_end":16},"name":"srgb","qualname":"<WindowSettings>::srgb","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should use hardware accelerated color conversion.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":21217,"byte_end":21230,"line_start":671,"line_end":671,"column_start":12,"column_end":25},"name":"get_resizable","qualname":"<WindowSettings>::get_resizable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should be resizable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":21345,"byte_end":21358,"line_start":676,"line_end":676,"column_start":12,"column_end":25},"name":"set_resizable","qualname":"<WindowSettings>::set_resizable","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should be resizable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":21660,"byte_end":21669,"line_start":685,"line_end":685,"column_start":12,"column_end":21},"name":"resizable","qualname":"<WindowSettings>::resizable","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should be resizable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":22051,"byte_end":22064,"line_start":697,"line_end":697,"column_start":12,"column_end":25},"name":"get_decorated","qualname":"<WindowSettings>::get_decorated","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should be decorated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":22405,"byte_end":22418,"line_start":708,"line_end":708,"column_start":12,"column_end":25},"name":"set_decorated","qualname":"<WindowSettings>::set_decorated","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should be decorated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":22946,"byte_end":22955,"line_start":723,"line_end":723,"column_start":12,"column_end":21},"name":"decorated","qualname":"<WindowSettings>::decorated","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should be decorated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":23125,"byte_end":23140,"line_start":729,"line_end":729,"column_start":12,"column_end":27},"name":"get_controllers","qualname":"<WindowSettings>::get_controllers","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether built windows should listen to controller input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":23271,"byte_end":23286,"line_start":734,"line_end":734,"column_start":12,"column_end":27},"name":"set_controllers","qualname":"<WindowSettings>::set_controllers","value":"fn (&mut self, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether built windows should listen to controller input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":23608,"byte_end":23619,"line_start":743,"line_end":743,"column_start":12,"column_end":23},"name":"controllers","qualname":"<WindowSettings>::controllers","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether build windows should listen to controller input.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,92,110,111,95,119,105,110,100,111,119,46,114,115],"byte_start":24490,"byte_end":24498,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,92,110,111,95,119,105,110,100,111,119,46,114,115],"byte_start":24800,"byte_end":24808,"line_start":39,"line_end":39,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,92,110,111,95,119,105,110,100,111,119,46,114,115],"byte_start":25430,"byte_end":25438,"line_start":71,"line_end":71,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,92,110,111,95,119,105,110,100,111,119,46,114,115],"byte_start":25678,"byte_end":25686,"line_start":80,"line_end":80,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":2034,"byte_end":2038,"line_start":60,"line_end":60,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":2233,"byte_end":2237,"line_start":70,"line_end":70,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":2420,"byte_end":2424,"line_start":80,"line_end":80,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":2621,"byte_end":2625,"line_start":90,"line_end":90,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":3918,"byte_end":3926,"line_start":144,"line_end":144,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":4108,"byte_end":4116,"line_start":154,"line_end":154,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":11722,"byte_end":11736,"line_start":387,"line_end":387,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,92,110,111,95,119,105,110,100,111,119,46,114,115],"byte_start":24490,"byte_end":24498,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,92,110,111,95,119,105,110,100,111,119,46,114,115],"byte_start":24800,"byte_end":24808,"line_start":39,"line_end":39,"column_start":17,"column_end":25},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":40},"to":{"krate":0,"index":144}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,92,110,111,95,119,105,110,100,111,119,46,114,115],"byte_start":25430,"byte_end":25438,"line_start":71,"line_end":71,"column_start":34,"column_end":42},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":40},"to":{"krate":0,"index":140}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,92,110,111,95,119,105,110,100,111,119,46,114,115],"byte_start":25678,"byte_end":25686,"line_start":80,"line_end":80,"column_start":25,"column_end":33},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":40},"to":{"krate":0,"index":162}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":2034,"byte_end":2038,"line_start":60,"line_end":60,"column_start":25,"column_end":29},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":276},"to":{"krate":2,"index":2606}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":2233,"byte_end":2237,"line_start":70,"line_end":70,"column_start":25,"column_end":29},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":276},"to":{"krate":2,"index":2606}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":2420,"byte_end":2424,"line_start":80,"line_end":80,"column_start":27,"column_end":31},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":276},"to":{"krate":2,"index":2606}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":2621,"byte_end":2625,"line_start":90,"line_end":90,"column_start":27,"column_end":31},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":276},"to":{"krate":2,"index":2606}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":3918,"byte_end":3926,"line_start":144,"line_end":144,"column_start":25,"column_end":33},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":294},"to":{"krate":2,"index":2606}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":4108,"byte_end":4116,"line_start":154,"line_end":154,"column_start":27,"column_end":35},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":294},"to":{"krate":2,"index":2606}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":4871,"byte_end":4876,"line_start":184,"line_end":184,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1678},"to":{"krate":0,"index":140}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":7230,"byte_end":7236,"line_start":247,"line_end":247,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":144},"to":{"krate":0,"index":162}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":7239,"byte_end":7244,"line_start":247,"line_end":247,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1678},"to":{"krate":0,"index":162}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":10692,"byte_end":10698,"line_start":353,"line_end":353,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":144},"to":{"krate":0,"index":192}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,112,105,115,116,111,110,99,111,114,101,45,119,105,110,100,111,119,45,48,46,51,52,46,48,92,115,114,99,47,108,105,98,46,114,115],"byte_start":11722,"byte_end":11736,"line_start":387,"line_end":387,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}}]}