{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52],"program":"C:\\Users\\Sam\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","num_derive","C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","--color","never","--crate-type","proc-macro","--emit=dep-info,link","-C","prefer-dynamic","-C","debuginfo=2","-C","metadata=2d0dc076e24da4a0","-C","extra-filename=-2d0dc076e24da4a0","--out-dir","c:\\Users\\Sam\\Documents\\VS Code\\Arcade-Games\\Conway\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Sam\\Documents\\VS Code\\Arcade-Games\\Conway\\target\\rls\\debug\\deps","--extern","proc_macro2=c:\\Users\\Sam\\Documents\\VS Code\\Arcade-Games\\Conway\\target\\rls\\debug\\deps\\libproc_macro2-490294cd99fdab5c.rlib","--extern","quote=c:\\Users\\Sam\\Documents\\VS Code\\Arcade-Games\\Conway\\target\\rls\\debug\\deps\\libquote-0815e85bf26aa999.rlib","--extern","syn=c:\\Users\\Sam\\Documents\\VS Code\\Arcade-Games\\Conway\\target\\rls\\debug\\deps\\libsyn-39b9e3bad0d8c119.rlib","--cap-lints","allow","--cfg","has_i128","--error-format=json","--sysroot","C:\\Users\\Sam\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":[99,58,92,85,115,101,114,115,92,83,97,109,92,68,111,99,117,109,101,110,116,115,92,86,83,32,67,111,100,101,92,65,114,99,97,100,101,45,71,97,109,101,115,92,67,111,110,119,97,121,92,116,97,114,103,101,116,92,114,108,115,92,100,101,98,117,103,92,100,101,112,115,92,110,117,109,95,100,101,114,105,118,101,45,50,100,48,100,99,48,55,54,101,50,52,100,97,52,97,48,46,100,108,108]},"prelude":{"crate_id":{"name":"num_derive","disambiguator":[11237728791030852661,13841522751106672238]},"crate_root":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src","external_crates":[{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[4600460140448241508,5508961786565165491]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[8610258522078413241,2552335774923959090]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[689774644902935965,15536965172289007933]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[14449616671278297819,15737520967429649463]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","num":5,"id":{"name":"libc","disambiguator":[4305469048187536392,6292377906701422790]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","num":6,"id":{"name":"unwind","disambiguator":[16942367656321780542,690074915001374900]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","num":7,"id":{"name":"panic_unwind","disambiguator":[10785388942496925736,17432224770527763107]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","num":8,"id":{"name":"proc_macro","disambiguator":[6260372878631493670,5532382917883246137]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","num":9,"id":{"name":"proc_macro2","disambiguator":[6389158844220205971,15519043984134918770]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","num":10,"id":{"name":"unicode_xid","disambiguator":[14156682355586511000,8802479420308620270]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","num":11,"id":{"name":"quote","disambiguator":[6688058986086276559,8915686632407243413]}},{"file_name":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","num":12,"id":{"name":"syn","disambiguator":[9834686054061549761,17444528438084423465]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":472,"byte_end":28580,"line_start":11,"line_end":799,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":472,"byte_end":28580,"line_start":11,"line_end":799,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Sam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-derive-0.2.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48}],"decl_id":null,"docs":" Procedural macros to derive numeric traits in Rust.","sig":null,"attributes":[{"value":"crate_type = \"proc-macro\"","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":472,"byte_end":501,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"recursion_limit = \"512\"","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":560,"byte_end":587,"line_start":13,"line_end":13,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4493,"byte_end":4507,"line_start":166,"line_end":166,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"::from_primitive","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::FromPrimitive`][from] for simple enums and newtypes.","sig":null,"attributes":[{"value":"proc_macro_derive(FromPrimitive)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4450,"byte_end":4485,"line_start":165,"line_end":165,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":9905,"byte_end":9917,"line_start":334,"line_end":334,"column_start":8,"column_end":20},"name":"to_primitive","qualname":"::to_primitive","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::ToPrimitive`][to] for simple enums and newtypes.","sig":null,"attributes":[{"value":"proc_macro_derive(ToPrimitive)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":9864,"byte_end":9897,"line_start":333,"line_end":333,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":14966,"byte_end":14973,"line_start":465,"line_end":465,"column_start":8,"column_end":15},"name":"num_ops","qualname":"::num_ops","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::NumOps`][num_ops] for newtypes.  The inner type must already implement\n `NumOps`.","sig":null,"attributes":[{"value":"proc_macro_derive(NumOps)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":14930,"byte_end":14958,"line_start":464,"line_end":464,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":16731,"byte_end":16739,"line_start":513,"line_end":513,"column_start":8,"column_end":16},"name":"num_cast","qualname":"::num_cast","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::NumCast`][num_cast] for newtypes.  The inner type must already implement\n `NumCast`.","sig":null,"attributes":[{"value":"proc_macro_derive(NumCast)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":16694,"byte_end":16723,"line_start":512,"line_end":512,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":17542,"byte_end":17546,"line_start":536,"line_end":536,"column_start":8,"column_end":12},"name":"zero","qualname":"::zero","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::Zero`][zero] for newtypes.  The inner type must already implement `Zero`.","sig":null,"attributes":[{"value":"proc_macro_derive(Zero)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":17508,"byte_end":17534,"line_start":535,"line_end":535,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18421,"byte_end":18424,"line_start":562,"line_end":562,"column_start":8,"column_end":11},"name":"one","qualname":"::one","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::One`][one] for newtypes.  The inner type must already implement `One`.","sig":null,"attributes":[{"value":"proc_macro_derive(One)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18388,"byte_end":18413,"line_start":561,"line_end":561,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19280,"byte_end":19283,"line_start":588,"line_end":588,"column_start":8,"column_end":11},"name":"num","qualname":"::num","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::Num`][num] for newtypes.  The inner type must already implement `Num`.","sig":null,"attributes":[{"value":"proc_macro_derive(Num)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19247,"byte_end":19272,"line_start":587,"line_end":587,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":20204,"byte_end":20209,"line_start":613,"line_end":613,"column_start":8,"column_end":13},"name":"float","qualname":"::float","value":"fn (input: TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derives [`num_traits::Float`][float] for newtypes.  The inner type must already implement\n `Float`.","sig":null,"attributes":[{"value":"proc_macro_derive(Float)","span":{"file_name":[67,58,92,85,115,101,114,115,92,83,97,109,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,110,117,109,45,100,101,114,105,118,101,45,48,46,50,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":20169,"byte_end":20196,"line_start":612,"line_end":612,"column_start":1,"column_end":28}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}